package com.sunbase.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.authentication.BadCredentialsException;
import org.springframework.security.core.Authentication;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.sunbase.DTO.loginDTO;
import com.sunbase.config.JwtUtil;
import com.sunbase.model.Admin;
import com.sunbase.repository.AdminRepo;

import jakarta.validation.Valid;

@RestController
public class LoginController {

	@Autowired
	private AdminRepo adminRepo;
	
    @Autowired
    private JwtUtil jwtUtil;
	
//	@GetMapping("/signIn")
//	public ResponseEntity<Admin> getLoggedInCustomerDetailsHandler(Authentication auth){
//		
//		
//		 Admin admin= adminRepo.findByEmail(auth.getName()).orElseThrow(() -> new BadCredentialsException("Invalid Username or password"));
//		
//		 return new ResponseEntity<>(admin, HttpStatus.ACCEPTED);
//		
//		
//	}
	@PostMapping("/signIn")
    public String login(@Valid @RequestBody loginDTO loginDTO) {
        // Simple authentication logic (replace with your actual logic)
        if ("admin".equals(loginDTO.getLogin_id()) && "password".equals(loginDTO.getPassword())) {
            return jwtUtil.generateToken(loginDTO.getLogin_id());
        } else {
            throw new RuntimeException("Invalid credentials");
        }
    }
	
}
