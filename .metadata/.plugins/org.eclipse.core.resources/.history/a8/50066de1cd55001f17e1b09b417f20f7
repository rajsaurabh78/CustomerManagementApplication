package com.sunbase.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PatchMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.sunbase.DTO.UpdateCustomerDTO;
import com.sunbase.model.Admin;
import com.sunbase.model.Customer;
import com.sunbase.service.AdminService;

import jakarta.validation.Valid;
@RestController
@RequestMapping("/admin")
public class AdminSideController {
	@Autowired
	private AdminService adminService;
	
	@PostMapping("/register/admin")
	public ResponseEntity<Admin> addAdminController(@Valid @RequestBody Admin admin){
		
		Admin res=adminService.addAdmin(admin);
		return new ResponseEntity<>(res,HttpStatus.CREATED);
		
	}
	
	@PostMapping("/register/customer")
	public ResponseEntity<Customer> addCustomerController(@Valid @RequestBody Customer customer){
		
		Customer res=adminService.addCustomer(customer);
		return new ResponseEntity<>(res,HttpStatus.CREATED);
		
	}
		
	@GetMapping("/customers/{id}")
	public ResponseEntity<Customer> getCustomerByIdController(@Valid @PathVariable("id") Integer id){
		Customer res=adminService.getCustomerById(id);
		return new ResponseEntity<>(res,HttpStatus.OK);
	}
	
	@GetMapping("/profile")
	public ResponseEntity<Admin> getOwnProfileController(){
		Admin res=adminService.getOwnProfile();
		return new ResponseEntity<>(res,HttpStatus.OK);
	}
	
	@GetMapping("/customers")
	public ResponseEntity<List<Customer>> getAllCustomersController(){
		List<Customer> res=adminService.getAllCustomer();
		return new ResponseEntity<>(res,HttpStatus.OK);
	}
	
	@PatchMapping("/customer/update")
	public ResponseEntity<String> updateCustomerController(@Valid @RequestBody UpdateCustomerDTO updateCustomerDTO){
		String res=adminService.updateCustomer(updateCustomerDTO);
		return new ResponseEntity<>(res,HttpStatus.OK);
	}
	
	@DeleteMapping("/customers/{id}")
	public ResponseEntity<String> deleteCustomerController(@Valid @PathVariable("id")Integer id){
		String res=adminService.deleteCustomer(id);
		return new ResponseEntity<>(res,HttpStatus.OK);
	}
	
	@DeleteMapping("/admins/{id}")
	public ResponseEntity<String> deleteAdminController(@Valid @PathVariable("id")Integer id){
		String res=adminService.deleteAdmin(id);
		return new ResponseEntity<>(res,HttpStatus.OK);
	}
	@GetMapping("/customers/search")
	public ResponseEntity<List<Customer>> getAllCustomersPaginationController(@Valid @RequestParam("direction")String direction
			,@Valid @RequestParam("pageNo")Integer pageNo,@Valid @RequestParam("noOfItem")Integer noOfItem
			,@Valid @RequestParam("field")String field,@Valid @RequestParam("search")String search){
		List<Customer> res=adminService.getAllCustomer(search, pageNo, noOfItem, field, direction);
		return new ResponseEntity<>(res,HttpStatus.OK);
	}
	
}
